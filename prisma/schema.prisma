// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GrenadeTypeCode {
  FLASH
  SMOKE
  MOLOTOV
  DECOY
  HE
}

model GrenadeTypes {
  grenadeTypeCode GrenadeTypeCode @id
  grenadeTypeName String          @unique @db.VarChar(20)
  Utility         Utility[]
}

enum MapCode {
  DE_INFERNO
  DE_NUKE
  DE_MIRAGE
  DE_OVERPASS
  DE_VERTIGO
  DE_ANUBIS
  DE_ANCIENT
}

model Maps {
  mapCode      MapCode        @id
  mapName      String         @unique @db.VarChar(100)
  mapPositions MapPositions[]

  UtilityCollection UtilityCollection[]
}

enum TeamCode {
  T_SIDE
  CT_SIDE
}

model Teams {
  teamCode           TeamCode            @id
  team_name          String              @unique @db.VarChar(20)
  utilityCollections UtilityCollection[]
}

enum PlantCode {
  A
  B
}

model Plants {
  plantCode          PlantCode           @id
  plantName          String              @unique @db.VarChar(10)
  utilities          Utility[]
  utilityCollections UtilityCollection[]
}

model MapPositions {
  positionId   String    @id @default(uuid())
  mapCode      MapCode
  map          Maps      @relation(fields: [mapCode], references: [mapCode])
  positionName String    @db.VarChar(100)
  utilities    Utility[]
}

enum Bind {
  NONE
  JUMPTHROW
  RUNTHROW
}

model Utility {
  utilityId          String              @id @default(uuid())
  createdAt          DateTime            @default(now())
  label              String              @db.VarChar(255)
  description        String              @default("") @db.VarChar(255)
  fromPositionId     String
  fromPosition       MapPositions        @relation(fields: [fromPositionId], references: [positionId])
  toPositionId       String
  grenadeTypeCode    GrenadeTypeCode
  grenadeType        GrenadeTypes        @relation(fields: [grenadeTypeCode], references: [grenadeTypeCode])
  plantCode          PlantCode
  plant              Plants              @relation(fields: [plantCode], references: [plantCode])
  throwing           String
  landing            String
  crosshairAlignment String
  positionAlignment  String              @default("")
  bind               Bind                @default(NONE)
  utilityCollections UtilityCollection[]
}

model UtilityCollection {
  utilityCollectonId String            @id @default(uuid())
  createdAt          DateTime          @default(now())
  thumbnail          String            @default("pending")
  label              String            @default("")
  teamCode           TeamCode
  team               Teams             @relation(fields: [teamCode], references: [teamCode])
  plantCode          PlantCode
  plant              Plants            @relation(fields: [plantCode], references: [plantCode])
  mapCode            MapCode
  map                Maps              @relation(fields: [mapCode], references: [mapCode])
  utilitiesOrder     GrenadeTypeCode[] @default([])
  utilities          Utility[]
}
